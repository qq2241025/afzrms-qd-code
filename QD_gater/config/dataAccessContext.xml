<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">
<beans>
	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:config.properties</value>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${database.driver}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.user}" />
		<property name="password" value="${database.password}" />

		<property name="maxActive" value="50" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="1000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="100" />
		<!-- <property name="ValidationQuery" value="select * from dual" /> -->
		<property name="TestOnReturn" value="true" />
		<property name="TestWhileIdle" value="true" />
	</bean>

	<!-- Configuration JDBCTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Transaction manager for a single JDBC DataSource -->
	<!-- (see dataAccessContext-jta.xml for an alternative) -->
	<bean id="jdbcTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="mappingLocations">
			<list>
				<value>
					classpath*:com/mapabc/wzt/orm/ms/*.hbm.xml
				</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					<!-- org.hibernate.dialect.OracleDialect org.hibernate.dialect.DB2Dialect -->
					${database.dialect}

				</prop>
				<prop key="hibernate.jdbc.fetch_size">100</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="default_entity_mode">dynamic-map</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">
					true
				</prop>
			</props>
		</property>
	</bean>

	<!-- Configuration HibernateTemplate -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative 
		to JTA) -->
	<bean id="hibernateTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="hibernateProxy" abstract="true" lazy-init="true"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="hibernateTransactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="add*">PROPAGATION_REQUIRED, -Exception</prop>
				<prop key="save*">
					PROPAGATION_REQUIRED, -Exception
				</prop>
				<prop key="remove*">
					PROPAGATION_REQUIRED, -Exception
				</prop>
				<prop key="delete*">
					PROPAGATION_REQUIRED, -Exception
				</prop>
				<prop key="update*">
					PROPAGATION_REQUIRED, -Exception
				</prop>
			</props>
		</property>
	</bean>

	<bean id="CoordinateConvertService"
		class="com.mapabc.gater.lbmp.service.impl.CoordinateConvertServiceImplDoNothing">
	</bean>
	
	<bean id="DBService"
		class="com.mapabc.gater.directl.dbutil.service.impl.DBServiceImplMysql">
		<property name="coordinateConvertService">
			<ref local="CoordinateConvertService" />
		</property>
	</bean>

<!-- 	<bean id="structionsService" -->
<!-- 		class="com.mapabc.wzt.service.monitor.structions.service.impl.StructionsServiceImpl"> -->
<!-- 		<property name="structionsDao"> -->
<!-- 			<ref local="structionsDao" /> -->
<!-- 		</property> -->
<!-- 	</bean> -->

<!-- 	<bean id="structionsDao" -->
<!-- 		class="com.mapabc.wzt.service.monitor.structions.dao.hibernate.StructionsDaoImpl"> -->
<!-- 		<property name="hibernateTemplate"> -->
<!-- 			<ref local="hibernateTemplate" /> -->
<!-- 		</property> -->
<!-- 	</bean> -->

<!-- 	<bean id="taskService" -->
<!-- 		class="com.mapabc.wzt.service.monitor.task.service.impl.TaskServiceImpl"> -->
<!-- 		<property name="taskDao"> -->
<!-- 			<ref local="taskDao" /> -->
<!-- 		</property> -->
<!-- 	</bean> -->

<!-- 	<bean id="taskDao" -->
<!-- 		class="com.mapabc.wzt.service.monitor.task.dao.hibernate.TaskDaoImpl"> -->
<!-- 		<property name="hibernateTemplate"> -->
<!-- 			<ref local="hibernateTemplate" /> -->
<!-- 		</property> -->
<!-- 	</bean> -->

<!-- 	<bean id="refTaskTermService" -->
<!-- 		class="com.mapabc.wzt.service.monitor.termtask.service.impl.RefTaskTermServiceImpl"> -->
<!-- 		<property name="refTaskTermDao"> -->
<!-- 			<ref local="refTaskTermDao" /> -->
<!-- 		</property> -->
<!-- 	</bean> -->

<!-- 	<bean id="refTaskTermDao" -->
<!-- 		class="com.mapabc.wzt.service.monitor.termtask.dao.hibernate.RefTaskTermDaoImpl"> -->
<!-- 		<property name="hibernateTemplate"> -->
<!-- 			<ref local="hibernateTemplate" /> -->
<!-- 		</property> -->
<!-- 	</bean> -->
</beans>