package com.dt.afzrms.po;

// Generated 2015-1-22 18:06:40 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TUser generated by hbm2java
 */
@Entity
@Table(name = "T_USER", catalog = "qdafz")
public class TUser implements java.io.Serializable {

	private Integer id;
	private TDept TDept;
	private String name;
	private String account;
	private String passwd;
	private String contact;
	private int isDeleted;
	private int userType;
	private String createBy;
	private Date createTime;
	private String remark;
	private Set<RefUserTerminal> refUserTerminals = new HashSet<RefUserTerminal>(0);
	private Set<RefUserRole> refUserRoles = new HashSet<RefUserRole>(0);

	public TUser() {
	}

	public TUser(String name, String account, String passwd) {
		this.name = name;
		this.account = account;
		this.passwd = passwd;
	}

	public TUser(TDept TDept, String name, String account, String passwd, String contact, int isDeleted,
			int userType, String createBy, Date createTime, String remark, Set<RefUserTerminal> refUserTerminals,
			Set<RefUserRole> refUserRoles) {
		this.TDept = TDept;
		this.name = name;
		this.account = account;
		this.passwd = passwd;
		this.contact = contact;
		this.isDeleted = isDeleted;
		this.userType = userType;
		this.createBy = createBy;
		this.createTime = createTime;
		this.remark = remark;
		this.refUserTerminals = refUserTerminals;
		this.refUserRoles = refUserRoles;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "dept_id")
	public TDept getTDept() {
		return this.TDept;
	}

	public void setTDept(TDept TDept) {
		this.TDept = TDept;
	}

	@Column(name = "name", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "account", nullable = false, length = 30)
	public String getAccount() {
		return this.account;
	}

	public void setAccount(String account) {
		this.account = account;
	}

	@Column(name = "passwd", nullable = false, length = 30)
	public String getPasswd() {
		return this.passwd;
	}

	public void setPasswd(String passwd) {
		this.passwd = passwd;
	}

	@Column(name = "contact", length = 40)
	public String getContact() {
		return this.contact;
	}

	public void setContact(String contact) {
		this.contact = contact;
	}

	@Column(name = "is_deleted")
	public int getIsDeleted() {
		return isDeleted;
	}

	public void setIsDeleted(int isDeleted) {
		this.isDeleted = isDeleted;
	}
	

	@Column(name = "user_type")
	public int getUserType() {
		return userType;
	}

	

	public void setUserType(int userType) {
		this.userType = userType;
	}

	@Column(name = "create_by", length = 50)
	public String getCreateBy() {
		return this.createBy;
	}

	

	public void setCreateBy(String createBy) {
		this.createBy = createBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Column(name = "remark", length = 200)
	public String getRemark() {
		return this.remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TUser")
	public Set<RefUserTerminal> getRefUserTerminals() {
		return this.refUserTerminals;
	}

	public void setRefUserTerminals(Set<RefUserTerminal> refUserTerminals) {
		this.refUserTerminals = refUserTerminals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TUser")
	public Set<RefUserRole> getRefUserRoles() {
		return this.refUserRoles;
	}

	public void setRefUserRoles(Set<RefUserRole> refUserRoles) {
		this.refUserRoles = refUserRoles;
	}

}
